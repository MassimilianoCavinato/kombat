{"version":3,"sources":["../../src/server/KombatServerEngine.js"],"names":["KombatServerEngine","io","gameEngine","inputOptions","on","shoot","bind","granade","stepInfo","postStep","deadzoneTimer","sideA","sideB","wallNorth","Wall","position","TwoVector","width","height","addObjectToWorld","wallEast","wallSouth","wallWest","walls","forEach","w","wall","deadZone","DeadZone","radius","socket","kombat","Kombat","playerId","name","max_health","health","ammo_capacity","ammo_loaded","granase_capacity","granade_loaded","throw_power","throwing_granade","timer_shot","timer_deadzone","socketId","world","queryObject","instanceType","removeObjectFromWorld","id","speed","liveTimer","bullet","Bullet","direction","ownerId","x","y","velocity","Math","cos","sin","timer","add","destroyObjectById","reloadAmmo","Granade","explode","objects","kombatId","granadeId","clone","explosion","Explosion2","kombats","queryObjects","k","d","sqrt","pow","blood","Blood","step","distance","ServerEngine"],"mappings":"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","sourcesContent":["import { ServerEngine, TwoVector } from 'lance-gg';\r\nimport Kombat from '../common/Kombat';\r\nimport Bullet from '../common/Bullet';\r\nimport Granade from '../common/Granade';\r\nimport Wall from '../common/Wall';\r\nimport Explosion2 from '../common/Explosion2';\r\nimport Blood from '../common/Blood';\r\nimport DeadZone from '../common/DeadZone';\r\n\r\nexport default class KombatServerEngine extends ServerEngine {\r\n\r\n    constructor(io, gameEngine, inputOptions) {\r\n        super(io, gameEngine, inputOptions);\r\n        this.gameEngine.on('shoot', this.shoot.bind(this));\r\n        this.gameEngine.on('granade', this.granade.bind(this));\r\n        this.gameEngine.on('postStep', (stepInfo) => this.postStep(stepInfo));\r\n        this.deadzoneTimer = 0;\r\n    }\r\n\r\n    start() {\r\n        super.start();\r\n\r\n        let sideA = 50;\r\n        let sideB = 3;\r\n\r\n        let wallNorth = new Wall(this.gameEngine, null, { \r\n            position: new TwoVector(0,0), \r\n            width: sideA,\r\n            height: sideB,\r\n        });\r\n        this.gameEngine.addObjectToWorld(wallNorth);\r\n\r\n        let wallEast = new Wall(this.gameEngine, null, { \r\n            position: new TwoVector(sideA,0), \r\n            width: sideB,\r\n            height: sideA,\r\n        });\r\n        this.gameEngine.addObjectToWorld(wallEast);\r\n\r\n        let wallSouth = new Wall(this.gameEngine, null, { \r\n            position: new TwoVector(sideB,sideA), \r\n            width: sideA,\r\n            height: sideB,\r\n        });\r\n        this.gameEngine.addObjectToWorld(wallSouth);\r\n\r\n\r\n        let wallWest = new Wall(this.gameEngine, null, { \r\n            position: new TwoVector(0,sideB), \r\n            width: sideB,\r\n            height: sideA,\r\n        });\r\n        this.gameEngine.addObjectToWorld(wallWest);\r\n\r\n        let walls = [\r\n            [8,8,3,9],\r\n            [32,18,8,3],\r\n            [25,25,2,2],\r\n            [42,36,3,9],\r\n            [12,32,8,3],\r\n        ];\r\n\r\n\r\n        walls.forEach(w => {\r\n            let wall = new Wall(this.gameEngine, null, { \r\n                position: new TwoVector(w[0], w[1]), \r\n                width: w[2],\r\n                height: w[3],\r\n            });\r\n\r\n            this.gameEngine.addObjectToWorld(wall);\r\n        });\r\n\r\n        let deadZone = new DeadZone(this.gameEngine, null, { \r\n            position: new TwoVector(30, 30)\r\n        });\r\n        deadZone.radius = 100;\r\n        this.gameEngine.addObjectToWorld(deadZone);\r\n\r\n    }\r\n\r\n    onPlayerConnected(socket) {\r\n        super.onPlayerConnected(socket);\r\n        let kombat = new Kombat(this.gameEngine, null, { \r\n            position: new TwoVector(10, 10),\r\n        });\r\n        kombat.playerId = socket.playerId;\r\n        kombat.name = 'Kombat '+socket.playerId;\r\n        kombat.max_health = 10;\r\n        kombat.health = 10;\r\n        kombat.ammo_capacity = 21;\r\n        kombat.ammo_loaded =  21;\r\n        kombat.granase_capacity = 8;\r\n        kombat.granade_loaded =  6;\r\n        kombat.throw_power = 0;\r\n        kombat.throwing_granade = false;\r\n        kombat.timer_shot = 0;\r\n        kombat.timer_deadzone = 0;\r\n        this.gameEngine.addObjectToWorld(kombat);\r\n    }\r\n\r\n    onPlayerDisconnected(socketId, playerId) {\r\n        super.onPlayerDisconnected(socketId, playerId);\r\n        let kombat = this.gameEngine.world.queryObject({ playerId: playerId,  instanceType: Kombat });\r\n        if (kombat) this.gameEngine.removeObjectFromWorld(kombat.id);\r\n    }\r\n\r\n    shoot(kombat) {\r\n        if(kombat.ammo_loaded > 0){\r\n            kombat.ammo_loaded--;\r\n            let speed = 0.4;\r\n            let liveTimer = 100; //gameloops\r\n            let bullet = new Bullet(this.gameEngine, null, { \r\n                direction: kombat.direction,\r\n                playerId: kombat.playerId,\r\n                ownerId: kombat.id,\r\n                position: new TwoVector(\r\n                    kombat.position.x + (kombat.width / 4),\r\n                    kombat.position.y + (kombat.height / 4)\r\n                ),\r\n                velocity: new TwoVector(\r\n                    Math.cos(kombat.direction) * speed ,\r\n                    Math.sin(kombat.direction) * speed\r\n                )\r\n            });\r\n            this.gameEngine.addObjectToWorld(bullet);\r\n            this.gameEngine.timer.add(liveTimer, this.destroyObjectById, this, [bullet.id]);\r\n        }\r\n        else if(kombat.ammo_loaded === 0 ){\r\n            kombat.ammo_loaded--;\r\n            this.gameEngine.timer.add(240, this.reloadAmmo, this, [kombat.id]);\r\n        }\r\n        \r\n    }\r\n\r\n    granade(kombat) {\r\n        if(kombat.granade_loaded > 0){\r\n            kombat.granade_loaded--;\r\n            let speed = .4 * kombat.throw_power;\r\n            let granade = new Granade(this.gameEngine, null, { \r\n                direction: kombat.direction,\r\n                position: new TwoVector(\r\n                    kombat.position.x + (kombat.width / 4),\r\n                    kombat.position.y + (kombat.height / 4)\r\n                ),\r\n                velocity: new TwoVector(\r\n                    Math.cos(kombat.direction) * speed ,\r\n                    Math.sin(kombat.direction) * speed\r\n                )\r\n            });\r\n            kombat.throw_power = 0;\r\n        \r\n            granade.playerId = kombat.playerId;\r\n            this.gameEngine.addObjectToWorld(granade);\r\n            this.gameEngine.timer.add(100, this.explode, this, [granade.id]);\r\n        }\r\n    }\r\n\r\n    destroyObjectById(id) {\r\n        if (this.gameEngine.world.objects[id]) {\r\n            this.gameEngine.removeObjectFromWorld(id);\r\n        }\r\n    }\r\n\r\n    reloadAmmo(kombatId){\r\n        let kombat = this.gameEngine.world.queryObject({ id: kombatId, instanceType: Kombat });\r\n        if(kombat){\r\n            kombat.ammo_loaded = kombat.ammo_capacity;\r\n        }\r\n    }\r\n\r\n    explode(granadeId) {\r\n        let granade = this.gameEngine.world.queryObject({ id: granadeId, instanceType: Granade });\r\n        if(granade){\r\n            let position = granade.position.clone();\r\n            let explosion = new Explosion2(this.gameEngine, null, { \r\n                position: position\r\n            });\r\n            this.destroyObjectById(granadeId);\r\n            explosion.radius = 10;\r\n            this.gameEngine.addObjectToWorld(explosion);\r\n            this.gameEngine.timer.add(150, this.destroyObjectById, this, [explosion.id]);\r\n            \r\n            let kombats = this.gameEngine.world.queryObjects({ instanceType: Kombat });\r\n            kombats.forEach(k=> {\r\n                let d = Math.sqrt(\r\n                    Math.pow( k.position.x+k.width/2 - position.x , 2) +  Math.pow( k.position.y+k.height/2 - position.y,2)\r\n                );\r\n                if(d <= explosion.radius){\r\n                    k.health -= 3;\r\n                    if(d <= explosion.radius/2){\r\n                       k.health -= 3; \r\n                    }\r\n                    if(d <= explosion.radius/4){\r\n                        k.health -= 3; \r\n                    }\r\n                    let blood = new Blood(this.gameEngine, null, { position: k.position.clone() });\r\n                    if(k.health <= 0){\r\n                        this.destroyObjectById(k.id);\r\n                    }\r\n                    this.gameEngine.addObjectToWorld(blood);\r\n                    this.gameEngine.timer.add(600, this.destroyObjectById, this, [blood.id]);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    postStep(stepInfo){\r\n\r\n        let deadZone = this.gameEngine.world.queryObject({ instanceType : DeadZone });\r\n        if(deadZone){\r\n            if(deadZone.radius <= 0){\r\n                deadZone.radius = 100;\r\n            }\r\n            else{\r\n                if(stepInfo.step - this.deadzoneTimer > 60 ){\r\n                    this.deadzoneTimer = stepInfo.step;\r\n                    let kombats = this.gameEngine.world.queryObjects({ instanceType : Kombat });\r\n                    kombats.forEach(k => {\r\n                        let distance = Math.sqrt(\r\n                            Math.pow( k.position.x + k.width/2 - deadZone.x , 2) +  Math.pow( k.position.y + k.height/2 - deadZone.position.y,2)\r\n                        );\r\n                        if(distance >= deadZone.radius){\r\n                            k.health--;\r\n                            let blood = new Blood(this.gameEngine, null, { position: k.position.clone() });\r\n                            if(k.health <= 0){\r\n                                this.destroyObjectById(k.id);\r\n                            }\r\n                            this.gameEngine.addObjectToWorld(blood);\r\n                            this.gameEngine.timer.add(600, this.destroyObjectById, this, [blood.id]);\r\n                        }\r\n                    })\r\n                }\r\n                deadZone.radius -= .02;\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"file":"KombatServerEngine.js"}