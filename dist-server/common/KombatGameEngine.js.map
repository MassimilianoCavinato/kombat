{"version":3,"sources":["../../src/common/KombatGameEngine.js"],"names":["KombatGameEngine","options","physicsEngine","SimplePhysicsEngine","gameEngine","collisions","autoResolve","on","moveAll","bind","e","handleCollision","Object","assign","foodRadius","headRadius","bodyRadius","eyeDist","eyeRadius","eyeAngle","spaceWidth","spaceHeight","moveDist","foodCount","eatDistance","startBodyLength","aiCount","directionStop","collideDistance","serializer","registerClass","Kombat","Bullet","Wall","Blood","x","Math","random","y","TwoVector","stepInfo","inputData","playerId","player","world","queryObject","speed","input","position","step","last_shot","emit","direction","o1","o2","handleBulletHit","destroyObjectById","id","kombat","bullet","health","blood","clone","addObjectToWorld","timer","add","objects","removeObjectFromWorld","GameEngine"],"mappings":"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","sourcesContent":["import { GameEngine, SimplePhysicsEngine, TwoVector } from 'lance-gg';\nimport Kombat from './Kombat';\nimport Wall from './Wall';\nimport Bullet from './Bullet';\nimport Blood from './Blood';\n\nexport default class KombatGameEngine extends GameEngine {\n\n    constructor(options) {\n        super(options);\n        this.physicsEngine = new SimplePhysicsEngine({\n            gameEngine: this,\n            collisions: {\n                autoResolve: true,\n            }\n        });\n        \n        this.on('preStep', this.moveAll.bind(this));\n        this.on('postStep', (e) => {\n            // console.log('poststep', e);\n        });\n        this.on('collisionStart', (e) => this.handleCollision(e));\n           \n        // game variables\n        Object.assign(this, {\n            foodRadius: 0.1, \n            headRadius: 0.25, \n            bodyRadius: 0.1,\n            eyeDist: 0.08, \n            eyeRadius: 0.03, \n            eyeAngle: 0.5,\n            spaceWidth: 16, \n            spaceHeight: 9,\n            moveDist: 0.06,\n            foodCount: 16, \n            eatDistance: 0.3, \n            startBodyLength: 10, \n            aiCount: 3, \n            directionStop: 100,\n            collideDistance: 1\n        });\n    }\n\n    registerClasses(serializer) {\n        serializer.registerClass(Kombat);\n        serializer.registerClass(Bullet);\n        serializer.registerClass(Wall);\n        serializer.registerClass(Blood);\n    }\n\n    start() {\n        super.start();\n    }\n\n    randPos() {\n        let x = (Math.random() - 0.5) * this.spaceWidth;\n        let y = (Math.random() - 0.5) * this.spaceHeight;\n        return new TwoVector(x, y);\n    }\n\n    moveAll(stepInfo) {\n        return;\n    }\n\n    processInput(inputData, playerId) {\n        super.processInput(inputData, playerId);\n        let player = this.world.queryObject({ playerId });\n        let speed = 0.25;\n        if (player) {\n            if (inputData.input === 'up') {\n                player.position.y-=speed;\n            }\n            else if (inputData.input === 'down') {\n                player.position.y+=speed;\n            }\n            else if (inputData.input === 'right') {\n                player.position.x+=speed;\n            }\n            else if (inputData.input === 'left') {\n                player.position.x-=speed;\n            }\n            else if (inputData.input === 'shoot'){\n                let step = inputData.step;\n                if(step  >= player.last_shot + 15){\n                    player.last_shot = step;\n                    this.emit('shoot', player);\n                }\n                \n            }\n            else {\n                player.direction = inputData.input;\n            }\n        }\n    }\n\n    handleCollision(e){\n        if(e.o1 instanceof Kombat){\n            if(e.o2 instanceof Bullet){\n                this.handleBulletHit(e.o1, e.o2)\n            }\n        }\n        else if(e.o1 instanceof Bullet){\n            if(e.o2 instanceof Kombat){\n                this.handleBulletHit(e.o2, e.o1)\n            }\n            else if( e.o2 instanceof Wall){\n                this.destroyObjectById(e.o1.id);\n            }\n        }\n        else if(e.o1 instanceof Wall){\n            if(e.o2 instanceof Bullet){\n                this.destroyObjectById(e.o2.id);\n            }\n        }\n    }\n\n    handleBulletHit(kombat, bullet){\n        this.destroyObjectById(bullet.id);\n        kombat.health--;\n        let blood = new Blood(this, null, { position: kombat.position.clone() });\n        this.addObjectToWorld(blood);\n        this.timer.add(120, this.destroyObjectById, this, [blood.id]);\n        if(kombat.health === 0){\n            this.destroyObjectById(kombat.id);\n        }\n    }\n\n    destroyObjectById(id){\n        if (this.world.objects[id]) {\n            this.removeObjectFromWorld(id);\n        }   \n    }\n}"],"file":"KombatGameEngine.js"}