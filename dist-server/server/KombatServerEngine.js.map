{"version":3,"sources":["../../src/server/KombatServerEngine.js"],"names":["RANDOM_SPAWNS","TwoVector","KombatServerEngine","io","gameEngine","inputOptions","on","play","bind","shoot","granade","pickup","stepInfo","postStep","deadzoneTimer","add_Map","map","add_DeadZone","obj","kombat","Kombat","position","get_randomVectorInBound","playerId","name","trim","length","max_health","health","ammo_capacity","ammo_loaded","granade_capacity","granade_loaded","throw_power","throwing_granade","timer_shot","timer_deadzone","_shoot_side","addObjectToWorld","w","h","Math","floor","random","forEach","wall","Wall","x","y","width","height","deadZone","DeadZone","radius","heals","world","queryObjects","instanceType","Heal2","destroyObjectById","id","heal","socket","socketId","queryObject","removeObjectFromWorld","speed","kombatPos","clone","kombatDir","direction","add","shoot_side","cos","sin","liveTimer","bullet","Bullet","ownerId","velocity","timer","reloadAmmo","Granade","explode","i","d","sqrt","pow","objects","kombatId","granadeId","explosion","Explosion2","kombats","k","blood","Blood","step","damage","distance","ServerEngine"],"mappings":"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","sourcesContent":["import { ServerEngine, TwoVector } from 'lance-gg';\nimport Kombat from '../common/Kombat';\nimport Bullet from '../common/Bullet';\nimport Granade from '../common/Granade';\nimport Wall from '../common/Wall';\nimport Explosion2 from '../common/Explosion2';\nimport Blood from '../common/Blood';\nimport DeadZone from '../common/DeadZone';\nimport Heal2 from '../common/Heal2';\nimport { map } from './map1';\n\nconst RANDOM_SPAWNS = [\n    new TwoVector(10, 10),\n    new TwoVector(40, 10),\n    new TwoVector(10, 40),\n    new TwoVector(40, 40)\n];\n\nexport default class KombatServerEngine extends ServerEngine {\n\n    constructor(io, gameEngine, inputOptions) {\n        super(io, gameEngine, inputOptions);\n        this.gameEngine.on('play', this.play.bind(this));\n        this.gameEngine.on('shoot', this.shoot.bind(this));\n        this.gameEngine.on('granade', this.granade.bind(this));\n        this.gameEngine.on('pickup', this.pickup.bind(this));\n        this.gameEngine.on('postStep', (stepInfo) => this.postStep(stepInfo));\n        this.deadzoneTimer = 0;\n    }\n\n    start() {\n        super.start();\n        this.add_Map(map);\n        this.add_DeadZone();\n    }\n\n    play(obj){\n        let kombat = new Kombat(this.gameEngine, null, { position: this.get_randomVectorInBound(100, 100)});\n        kombat.playerId = obj.playerId;\n        kombat.name = obj.name.trim().length < 1 ? 'Kombat '+ obj.playerId : obj.name;\n        kombat.max_health = 100;\n        kombat.health = 100;\n        kombat.ammo_capacity = 64;\n        kombat.ammo_loaded =  64;\n        kombat.granade_capacity = 48;\n        kombat.granade_loaded =  48;\n        kombat.throw_power = 0;\n        kombat.throwing_granade = false;\n        kombat.timer_shot = 0;\n        kombat.timer_deadzone = 0;\n        kombat._shoot_side = 'l';\n        this.gameEngine.addObjectToWorld(kombat);\n\n    }\n\n    get_randomVectorInBound(w, h){\n        return new TwoVector(\n            Math.floor(Math.random() * (w - 16)) + 8 , \n            Math.floor(Math.random() * (h - 16)) + 8 \n        )\n    }\n\n    add_Map(map){\n        map.forEach(w => {\n            let wall = new Wall(this.gameEngine, null, { \n                position: new TwoVector(w.x, w.y), \n                width: w.width,\n                height: w.height,\n            });\n\n            this.gameEngine.addObjectToWorld(wall);\n        });\n    }\n\n    add_DeadZone(){\n        let deadZone = new DeadZone(this.gameEngine, null, { position: this.get_randomVectorInBound(100, 100)});\n        deadZone.radius = 150;\n        this.gameEngine.addObjectToWorld(deadZone);\n        let heals = this.gameEngine.world.queryObjects({ instanceType: Heal2 });\n        if(heals.length === 10){\n            heals.forEach(h => this.destroyObjectById(h.id));\n        }\n        //add heal\n        let heal = new Heal2(this.gameEngine, null, { position: this.get_randomVectorInBound(100, 100)});\n        this.gameEngine.addObjectToWorld(heal);\n    }\n\n    onPlayerConnected(socket) {\n        super.onPlayerConnected(socket);\n    }\n\n    onPlayerDisconnected(socketId, playerId) {\n        super.onPlayerDisconnected(socketId, playerId);\n        let kombat = this.gameEngine.world.queryObject({ playerId: playerId,  instanceType: Kombat });\n        if (kombat) this.gameEngine.removeObjectFromWorld(kombat.id);\n    }\n\n    shoot(kombat) {\n        if(kombat.ammo_loaded > 0){\n            kombat.ammo_loaded--;\n            let speed = 0.5;\n            let kombatPos = kombat.position.clone();\n            let kombatDir = kombat.direction;\n\n            kombatPos.add(new TwoVector(.5, .5));\n            let position;\n          \n            if(kombat.shoot_side === 'l'){\n                position = new TwoVector(\n                    kombatPos.x + 1 * Math.cos(kombatDir-1.5),\n                    kombatPos.y + 1 * Math.sin(kombatDir-1.5)\n                )\n                kombat.shoot_side = \"r\";\n            }\n            else{\n                position = new TwoVector(\n                    kombatPos.x  + 1 *  Math.cos(kombatDir+1.5),\n                    kombatPos.y  + 1 *  Math.sin(kombatDir+1.5)\n                )\n                kombat.shoot_side = \"l\";\n            }\n          \n            let liveTimer = 100; //gameloops\n            let bullet = new Bullet(this.gameEngine, null, { \n                direction: kombatDir,\n                playerId: kombat.playerId,\n                ownerId: kombat.id,\n                position: position,\n                velocity: new TwoVector(\n                    Math.cos(kombatDir) * speed ,\n                    Math.sin(kombatDir) * speed\n                )\n            });\n            this.gameEngine.addObjectToWorld(bullet);\n            this.gameEngine.timer.add(liveTimer, this.destroyObjectById, this, [bullet.id]);\n        }\n        else if(kombat.ammo_loaded === 0 ){\n            kombat.ammo_loaded--;\n            this.gameEngine.timer.add(240, this.reloadAmmo, this, [kombat.id]);\n        }\n    }\n\n    granade(kombat) {\n        if(kombat.granade_loaded > 0){\n            kombat.granade_loaded--;\n            let speed = .4 * kombat.throw_power;\n            let granade = new Granade(this.gameEngine, null, { \n                direction: kombat.direction,\n                position: new TwoVector(\n                    kombat.position.x + (kombat.width / 4),\n                    kombat.position.y + (kombat.height / 4)\n                ),\n                velocity: new TwoVector(\n                    Math.cos(kombat.direction) * speed ,\n                    Math.sin(kombat.direction) * speed\n                )\n            });\n            kombat.throw_power = 0;\n        \n            granade.playerId = kombat.playerId;\n            this.gameEngine.addObjectToWorld(granade);\n            this.gameEngine.timer.add(100, this.explode, this, [granade.id]);\n        }\n    }\n\n    pickup(kombat){\n     \n        let heals = this.gameEngine.world.queryObjects({instanceType: Heal2 });\n        for(let i=0; i<heals.length; i++){\n            let h = heals[i];\n             let d = Math.sqrt(\n                Math.pow( kombat.position.x+kombat.width/2 - h.position.x , 2) +  \n                Math.pow( kombat.position.y+kombat.height/2 - h.position.y,2)\n            );\n           \n            if(d < 1.5){\n                kombat.health += 30;\n                if(kombat.health > kombat.max_health){\n                    kombat.health = kombat.max_health;\n                }\n                this.gameEngine.removeObjectFromWorld(h.id);\n                return false;\n            }\n        }\n    }\n\n    destroyObjectById(id) {\n        if (this.gameEngine.world.objects[id]) {\n            this.gameEngine.removeObjectFromWorld(id);\n        }\n    }\n\n    reloadAmmo(kombatId){\n        let kombat = this.gameEngine.world.queryObject({ id: kombatId, instanceType: Kombat });\n        if(kombat){\n            kombat.ammo_loaded = kombat.ammo_capacity;\n        }\n    }\n\n    explode(granadeId) {\n        let granade = this.gameEngine.world.queryObject({ id: granadeId, instanceType: Granade });\n        if(granade){\n            let position = granade.position.clone();\n            let explosion = new Explosion2(this.gameEngine, null, { \n                position: position\n            });\n            this.destroyObjectById(granadeId);\n            explosion.radius = 10;\n            this.gameEngine.addObjectToWorld(explosion);\n            this.gameEngine.timer.add(150, this.destroyObjectById, this, [explosion.id]);\n            \n            let kombats = this.gameEngine.world.queryObjects({ instanceType: Kombat });\n            kombats.forEach(k=> {\n                let d = Math.sqrt(\n                    Math.pow( k.position.x+k.width/2 - position.x , 2) +  Math.pow( k.position.y+k.height/2 - position.y,2)\n                );\n                if(d <= explosion.radius){\n                    k.health -= 3;\n                    if(d <= explosion.radius/2){\n                       k.health -= 3; \n                    }\n                    if(d <= explosion.radius/4){\n                        k.health -= 3; \n                    }\n                    let blood = new Blood(this.gameEngine, null, { position: k.position.clone() });\n                    if(k.health <= 0){\n                        this.destroyObjectById(k.id);\n                    }\n                    this.gameEngine.addObjectToWorld(blood);\n                    this.gameEngine.timer.add(600, this.destroyObjectById, this, [blood.id]);\n                }\n            });\n        }\n    }\n\n    postStep(stepInfo){\n\n        let deadZone = this.gameEngine.world.queryObject({ instanceType : DeadZone });\n        if(deadZone){\n\n            if(deadZone.radius < -10){\n\n                deadZone.position.x = Math.floor(Math.random() * 90) + 10\n                deadZone.position.y = Math.floor(Math.random() * 90) + 10 \n                deadZone.radius = 150;\n                let heal = new Heal2(this.gameEngine, null, { position: deadZone.position.clone()})\n                this.gameEngine.addObjectToWorld(heal);\n            }\n            else{\n\n                if(stepInfo.step - this.deadzoneTimer > 60 ){\n                    this.deadzoneTimer = stepInfo.step;\n                    let kombats = this.gameEngine.world.queryObjects({ instanceType : Kombat });\n                    let damage = 2;\n                    if(deadZone.radius < 50){\n                        damage += 2;\n                    }\n                    else if(deadZone.radius < 30){\n                        damage += 4;\n                    }\n                    else if(deadZone.radius < 10){\n                        damage += 6;\n                    }\n                    kombats.forEach(k => {\n                        let distance = Math.sqrt(\n                            Math.pow( k.position.x + k.width/2 - deadZone.x , 2) +  Math.pow( k.position.y + k.height/2 - deadZone.position.y,2)\n                        );\n                        if(distance >= deadZone.radius){\n                            k.health -= damage;\n                            let blood = new Blood(this.gameEngine, null, { position: k.position.clone() });\n                            if(k.health <= 0){\n                                this.destroyObjectById(k.id);\n                            }\n                            this.gameEngine.addObjectToWorld(blood);\n                            this.gameEngine.timer.add(600, this.destroyObjectById, this, [blood.id]);\n                        }\n                    })\n                }\n                deadZone.radius -= .04;\n            }\n        }\n    }\n}\n"],"file":"KombatServerEngine.js"}