{"version":3,"sources":["../../src/server/KombatServerEngine.js"],"names":["RANDOM_SPAWNS","TwoVector","KombatServerEngine","io","gameEngine","inputOptions","on","shoot","bind","granade","stepInfo","postStep","deadzoneTimer","add_Map","map","add_DeadZone","forEach","w","wall","Wall","position","x","y","width","height","addObjectToWorld","deadZone","DeadZone","radius","socket","Math","floor","random","length","clone","kombat","Kombat","playerId","name","max_health","health","ammo_capacity","ammo_loaded","granade_capacity","granade_loaded","throw_power","throwing_granade","timer_shot","timer_deadzone","socketId","world","queryObject","instanceType","removeObjectFromWorld","id","speed","liveTimer","bullet","Bullet","direction","ownerId","velocity","cos","sin","timer","add","destroyObjectById","reloadAmmo","Granade","explode","objects","kombatId","granadeId","explosion","Explosion2","kombats","queryObjects","k","d","sqrt","pow","blood","Blood","step","distance","ServerEngine"],"mappings":"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","sourcesContent":["import { ServerEngine, TwoVector } from 'lance-gg';\nimport Kombat from '../common/Kombat';\nimport Bullet from '../common/Bullet';\nimport Granade from '../common/Granade';\nimport Wall from '../common/Wall';\nimport Explosion2 from '../common/Explosion2';\nimport Blood from '../common/Blood';\nimport DeadZone from '../common/DeadZone';\nimport { map } from './map1';\n\nconst RANDOM_SPAWNS = [\n    new TwoVector(10, 10),\n    new TwoVector(40, 10),\n    new TwoVector(10, 40),\n    new TwoVector(40, 40)\n];\n\nexport default class KombatServerEngine extends ServerEngine {\n\n    constructor(io, gameEngine, inputOptions) {\n        super(io, gameEngine, inputOptions);\n        this.gameEngine.on('shoot', this.shoot.bind(this));\n        this.gameEngine.on('granade', this.granade.bind(this));\n        this.gameEngine.on('postStep', (stepInfo) => this.postStep(stepInfo));\n        this.deadzoneTimer = 0;\n    }\n\n    start() {\n        super.start();\n        this.add_Map(map);\n        this.add_DeadZone();\n        \n    }\n\n    add_Map(map){\n        map.forEach(w => {\n            let wall = new Wall(this.gameEngine, null, { \n                position: new TwoVector(w.x, w.y), \n                width: w.width,\n                height: w.height,\n            });\n\n            this.gameEngine.addObjectToWorld(wall);\n        });\n    }\n\n    add_DeadZone(){\n        let deadZone = new DeadZone(this.gameEngine, null, { \n            position: new TwoVector(30, 30)\n        });\n        deadZone.radius = 100;\n        this.gameEngine.addObjectToWorld(deadZone);\n    }\n    onPlayerConnected(socket) {\n        super.onPlayerConnected(socket);\n        let position = RANDOM_SPAWNS[Math.floor(Math.random()*RANDOM_SPAWNS.length)].clone();\n        let kombat = new Kombat(this.gameEngine, null, { \n            position: position,\n        });\n\n\n        kombat.playerId = socket.playerId;\n        kombat.name = 'Kombat '+socket.playerId;\n        kombat.max_health = 100;\n        kombat.health = 100;\n        kombat.ammo_capacity = 21;\n        kombat.ammo_loaded =  21;\n        kombat.granade_capacity = 6;\n        kombat.granade_loaded =  50;\n        kombat.throw_power = 0;\n        kombat.throwing_granade = false;\n        kombat.timer_shot = 0;\n        kombat.timer_deadzone = 0;\n        this.gameEngine.addObjectToWorld(kombat);\n    }\n\n    onPlayerDisconnected(socketId, playerId) {\n        super.onPlayerDisconnected(socketId, playerId);\n        let kombat = this.gameEngine.world.queryObject({ playerId: playerId,  instanceType: Kombat });\n        if (kombat) this.gameEngine.removeObjectFromWorld(kombat.id);\n    }\n\n    shoot(kombat) {\n        if(kombat.ammo_loaded > 0){\n            kombat.ammo_loaded--;\n            let speed = 0.4;\n            let liveTimer = 100; //gameloops\n            let bullet = new Bullet(this.gameEngine, null, { \n                direction: kombat.direction,\n                playerId: kombat.playerId,\n                ownerId: kombat.id,\n                position: new TwoVector(\n                    kombat.position.x + (kombat.width / 4),\n                    kombat.position.y + (kombat.height / 4)\n                ),\n                velocity: new TwoVector(\n                    Math.cos(kombat.direction) * speed ,\n                    Math.sin(kombat.direction) * speed\n                )\n            });\n            this.gameEngine.addObjectToWorld(bullet);\n            this.gameEngine.timer.add(liveTimer, this.destroyObjectById, this, [bullet.id]);\n        }\n        else if(kombat.ammo_loaded === 0 ){\n            kombat.ammo_loaded--;\n            this.gameEngine.timer.add(240, this.reloadAmmo, this, [kombat.id]);\n        }\n    }\n\n    granade(kombat) {\n        if(kombat.granade_loaded > 0){\n            kombat.granade_loaded--;\n            let speed = .4 * kombat.throw_power;\n            let granade = new Granade(this.gameEngine, null, { \n                direction: kombat.direction,\n                position: new TwoVector(\n                    kombat.position.x + (kombat.width / 4),\n                    kombat.position.y + (kombat.height / 4)\n                ),\n                velocity: new TwoVector(\n                    Math.cos(kombat.direction) * speed ,\n                    Math.sin(kombat.direction) * speed\n                )\n            });\n            kombat.throw_power = 0;\n        \n            granade.playerId = kombat.playerId;\n            this.gameEngine.addObjectToWorld(granade);\n            this.gameEngine.timer.add(100, this.explode, this, [granade.id]);\n        }\n    }\n\n    destroyObjectById(id) {\n        if (this.gameEngine.world.objects[id]) {\n            this.gameEngine.removeObjectFromWorld(id);\n        }\n    }\n\n    reloadAmmo(kombatId){\n        let kombat = this.gameEngine.world.queryObject({ id: kombatId, instanceType: Kombat });\n        if(kombat){\n            kombat.ammo_loaded = kombat.ammo_capacity;\n        }\n    }\n\n    explode(granadeId) {\n        let granade = this.gameEngine.world.queryObject({ id: granadeId, instanceType: Granade });\n        if(granade){\n            let position = granade.position.clone();\n            let explosion = new Explosion2(this.gameEngine, null, { \n                position: position\n            });\n            this.destroyObjectById(granadeId);\n            explosion.radius = 10;\n            this.gameEngine.addObjectToWorld(explosion);\n            this.gameEngine.timer.add(150, this.destroyObjectById, this, [explosion.id]);\n            \n            let kombats = this.gameEngine.world.queryObjects({ instanceType: Kombat });\n            kombats.forEach(k=> {\n                let d = Math.sqrt(\n                    Math.pow( k.position.x+k.width/2 - position.x , 2) +  Math.pow( k.position.y+k.height/2 - position.y,2)\n                );\n                if(d <= explosion.radius){\n                    k.health -= 3;\n                    if(d <= explosion.radius/2){\n                       k.health -= 3; \n                    }\n                    if(d <= explosion.radius/4){\n                        k.health -= 3; \n                    }\n                    let blood = new Blood(this.gameEngine, null, { position: k.position.clone() });\n                    if(k.health <= 0){\n                        this.destroyObjectById(k.id);\n                    }\n                    this.gameEngine.addObjectToWorld(blood);\n                    this.gameEngine.timer.add(600, this.destroyObjectById, this, [blood.id]);\n                }\n            });\n        }\n    }\n\n    postStep(stepInfo){\n\n        let deadZone = this.gameEngine.world.queryObject({ instanceType : DeadZone });\n        if(deadZone){\n            if(deadZone.radius <= 0){\n                deadZone.radius = 100;\n            }\n            else{\n                if(stepInfo.step - this.deadzoneTimer > 60 ){\n                    this.deadzoneTimer = stepInfo.step;\n                    let kombats = this.gameEngine.world.queryObjects({ instanceType : Kombat });\n                    kombats.forEach(k => {\n                        let distance = Math.sqrt(\n                            Math.pow( k.position.x + k.width/2 - deadZone.x , 2) +  Math.pow( k.position.y + k.height/2 - deadZone.position.y,2)\n                        );\n                        if(distance >= deadZone.radius){\n                            k.health--;\n                            let blood = new Blood(this.gameEngine, null, { position: k.position.clone() });\n                            if(k.health <= 0){\n                                this.destroyObjectById(k.id);\n                            }\n                            this.gameEngine.addObjectToWorld(blood);\n                            this.gameEngine.timer.add(600, this.destroyObjectById, this, [blood.id]);\n                        }\n                    })\n                }\n                deadZone.radius -= .02;\n            }\n        }\n    }\n}\n"],"file":"KombatServerEngine.js"}