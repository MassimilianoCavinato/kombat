{"version":3,"sources":["../../src/server/KombatServerEngine.js"],"names":["RANDOM_SPAWNS","TwoVector","KombatServerEngine","io","gameEngine","inputOptions","on","e","play","shoot","granade","pickup","handleBulletHit","stepInfo","postStep","deadzoneTimer","add_Map","map","add_DeadZone","obj","kombat","Kombat","position","get_randomVectorInBound","playerId","name","trim","length","max_health","health","ammo_capacity","ammo_loaded","granade_capacity","granade_loaded","throw_power","throwing_granade","timer_shot","timer_deadzone","_shoot_side","scope","addObjectToWorld","destroyObjectById","id","blood","Blood","clone","timer","add","w","h","Math","floor","random","forEach","wall","Wall","x","y","width","height","prev_deadZone","world","queryObject","instanceType","DeadZone","deadZone","radius","heals","queryObjects","Heal2","heal","socket","socketId","removeObjectFromWorld","speed","kombatPos","kombatDir","direction","shoot_side","cos","sin","liveTimer","bullet","Bullet","ownerId","velocity","reloadAmmo","Granade","prevVelocity","explode","i","d","sqrt","pow","objects","kombatId","granadeId","explosion","Explosion2","kombats","k","step","damage","distance","ServerEngine"],"mappings":"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","sourcesContent":["import { ServerEngine, TwoVector } from 'lance-gg';\nimport Kombat from '../common/Kombat';\nimport Bullet from '../common/Bullet';\nimport Granade from '../common/Granade';\nimport Wall from '../common/Wall';\nimport Explosion2 from '../common/Explosion2';\nimport Blood from '../common/Blood';\nimport DeadZone from '../common/DeadZone';\nimport Heal2 from '../common/Heal2';\nimport { map } from './map1';\n\nconst RANDOM_SPAWNS = [\n    new TwoVector(10, 10),\n    new TwoVector(40, 10),\n    new TwoVector(10, 40),\n    new TwoVector(40, 40)\n];\n\nexport default class KombatServerEngine extends ServerEngine {\n\n    constructor(io, gameEngine, inputOptions) {\n        super(io, gameEngine, inputOptions);\n        this.gameEngine.on('play',      e => this.play(e));\n        this.gameEngine.on('shoot',     e => this.shoot(e));\n        this.gameEngine.on('granade',   e => this.granade(e));\n        this.gameEngine.on('pickup',    e => this.pickup(e));\n        this.gameEngine.on('bullethit', e => this.handleBulletHit(e));\n        this.gameEngine.on('postStep', (stepInfo) => this.postStep(stepInfo));\n        this.deadzoneTimer = 0;\n    }\n\n    start() {\n        super.start();\n        this.add_Map(map);\n        this.add_DeadZone();\n    }\n\n    play(obj){\n        let kombat = new Kombat(this.gameEngine, null, { position: this.get_randomVectorInBound(100, 100)});\n        kombat.playerId = obj.playerId;\n        kombat.name = obj.name.trim().length < 1 ? 'Kombat '+ obj.playerId : obj.name;\n        kombat.max_health = 100;\n        kombat.health = 100;\n        kombat.ammo_capacity = 64;\n        kombat.ammo_loaded =  64;\n        kombat.granade_capacity = 32;\n        kombat.granade_loaded =  32;\n        kombat.throw_power = 0;\n        kombat.throwing_granade = false;\n        kombat.timer_shot = 0;\n        kombat.timer_deadzone = 0;\n        kombat._shoot_side = 'l';\n        kombat.scope = 15;\n        this.gameEngine.addObjectToWorld(kombat);\n\n    }\n\n    handleBulletHit(kombat){\n        kombat.health -= 3;\n        if(kombat.health <= 0){\n            this.destroyObjectById(kombat.id);\n        }\n        let blood = new Blood(this.gameEngine, null, { position: kombat.position.clone() });\n        this.gameEngine.addObjectToWorld(blood);\n        this.gameEngine.timer.add(600, this.destroyObjectById, this, [blood.id]);\n    }\n\n    get_randomVectorInBound(w, h){\n        return new TwoVector(\n            Math.floor(Math.random() * (w - 16)) + 8 , \n            Math.floor(Math.random() * (h - 16)) + 8 \n        )\n    }\n\n    add_Map(map){\n        map.forEach(w => {\n            let wall = new Wall(this.gameEngine, null, { \n                position: new TwoVector(w.x, w.y), \n                width: w.width,\n                height: w.height,\n            });\n\n            this.gameEngine.addObjectToWorld(wall);\n        });\n    }\n\n    add_DeadZone(){\n        let prev_deadZone = this.gameEngine.world.queryObject({ instanceType : DeadZone });\n        if(prev_deadZone){\n            this.destroyObjectById(prev_deadZone.id);\n        }\n        let deadZone = new DeadZone(this.gameEngine, null, { position: this.get_randomVectorInBound(100, 100)});\n        deadZone.radius = 150;\n        this.gameEngine.addObjectToWorld(deadZone);\n\n        let heals = this.gameEngine.world.queryObjects({ instanceType: Heal2 });\n        if(heals.length >= 10){\n            heals.forEach(h => this.destroyObjectById(h.id));\n        }\n        //add heal\n        let heal = new Heal2(this.gameEngine, null, { position: this.get_randomVectorInBound(100, 100)});\n        this.gameEngine.addObjectToWorld(heal);\n    }\n\n    onPlayerConnected(socket) {\n        super.onPlayerConnected(socket);\n    }\n\n    onPlayerDisconnected(socketId, playerId) {\n        super.onPlayerDisconnected(socketId, playerId);\n        let kombat = this.gameEngine.world.queryObject({ playerId: playerId,  instanceType: Kombat });\n        if (kombat) this.gameEngine.removeObjectFromWorld(kombat.id);\n    }\n\n    shoot(kombat) {\n        if(kombat.ammo_loaded > 0){\n            kombat.ammo_loaded--;\n            let speed = 0.5;\n            let kombatPos = kombat.position.clone();\n            let kombatDir = kombat.direction;\n\n            kombatPos.add(new TwoVector(.5, .5));\n            let position;\n          \n            if(kombat.shoot_side === 'l'){\n                position = new TwoVector(\n                    kombatPos.x + 1 * Math.cos(kombatDir-1.5),\n                    kombatPos.y + 1 * Math.sin(kombatDir-1.5)\n                )\n                kombat.shoot_side = \"r\";\n            }\n            else{\n                position = new TwoVector(\n                    kombatPos.x  + 1 *  Math.cos(kombatDir+1.5),\n                    kombatPos.y  + 1 *  Math.sin(kombatDir+1.5)\n                )\n                kombat.shoot_side = \"l\";\n            }\n          \n            let liveTimer = 100; //gameloops\n            let bullet = new Bullet(this.gameEngine, null, { \n                direction: kombatDir,\n                playerId: kombat.playerId,\n                ownerId: kombat.id,\n                position: position,\n                velocity: new TwoVector(\n                    Math.cos(kombatDir) * speed ,\n                    Math.sin(kombatDir) * speed\n                )\n            });\n            this.gameEngine.addObjectToWorld(bullet);\n            this.gameEngine.timer.add(liveTimer, this.destroyObjectById, this, [bullet.id]);\n        }\n        else if(kombat.ammo_loaded === 0 ){\n            kombat.ammo_loaded--;\n            this.gameEngine.timer.add(240, this.reloadAmmo, this, [kombat.id]);\n        }\n    }\n\n    granade(kombat) {\n        if(kombat.granade_loaded > 0){\n            kombat.granade_loaded--;\n            let speed = .4 * kombat.throw_power;\n            let velocity = new TwoVector(\n                Math.cos(kombat.direction) * speed ,\n                Math.sin(kombat.direction) * speed\n            )\n            let granade = new Granade(this.gameEngine, null, { \n                direction: kombat.direction,\n                position: new TwoVector(\n                    kombat.position.x + (kombat.width / 4),\n                    kombat.position.y + (kombat.height / 4)\n                ),\n                velocity: velocity\n            });\n            kombat.throw_power = 0;\n        \n            granade.playerId = kombat.playerId;\n            granade.prevVelocity = velocity.clone();\n\n            this.gameEngine.addObjectToWorld(granade);\n            this.gameEngine.timer.add(100, this.explode, this, [granade.id]);\n        }\n    }\n\n    pickup(kombat){\n     \n        let heals = this.gameEngine.world.queryObjects({instanceType: Heal2 });\n        for(let i=0; i<heals.length; i++){\n            let h = heals[i];\n             let d = Math.sqrt(\n                Math.pow( kombat.position.x+kombat.width/2 - h.position.x , 2) +  \n                Math.pow( kombat.position.y+kombat.height/2 - h.position.y,2)\n            );\n           \n            if(d < 1.5){\n                kombat.health += 30;\n                if(kombat.health > kombat.max_health){\n                    kombat.health = kombat.max_health;\n                }\n                this.gameEngine.removeObjectFromWorld(h.id);\n                return false;\n            }\n        }\n    }\n\n    destroyObjectById(id) {\n        if (this.gameEngine.world.objects[id]) {\n            this.gameEngine.removeObjectFromWorld(id);\n        }\n    }\n\n    reloadAmmo(kombatId){\n        let kombat = this.gameEngine.world.queryObject({ id: kombatId, instanceType: Kombat });\n        if(kombat){\n            kombat.ammo_loaded = kombat.ammo_capacity;\n        }\n    }\n\n    explode(granadeId) {\n        let granade = this.gameEngine.world.queryObject({ id: granadeId, instanceType: Granade });\n        if(granade){\n            let position = granade.position.clone();\n            let explosion = new Explosion2(this.gameEngine, null, { \n                position: position\n            });\n            this.destroyObjectById(granadeId);\n            explosion.radius = 10;\n            this.gameEngine.addObjectToWorld(explosion);\n            this.gameEngine.timer.add(150, this.destroyObjectById, this, [explosion.id]);\n            \n            let kombats = this.gameEngine.world.queryObjects({ instanceType: Kombat });\n            kombats.forEach(k=> {\n                let d = Math.sqrt(\n                    Math.pow( k.position.x+k.width/2 - position.x , 2) +  Math.pow( k.position.y+k.height/2 - position.y,2)\n                );\n                if(d <= explosion.radius){\n                    k.health -= 3;\n                    if(d <= explosion.radius/2){\n                       k.health -= 3; \n                    }\n                    if(d <= explosion.radius/4){\n                        k.health -= 3; \n                    }\n                    let blood = new Blood(this.gameEngine, null, { position: k.position.clone() });\n                    if(k.health <= 0){\n                        this.destroyObjectById(k.id);\n                    }\n                    this.gameEngine.addObjectToWorld(blood);\n                    this.gameEngine.timer.add(600, this.destroyObjectById, this, [blood.id]);\n                }\n            });\n        }\n    }\n\n    postStep(stepInfo){\n\n        let deadZone = this.gameEngine.world.queryObject({ instanceType : DeadZone });\n        if(deadZone){\n            if(deadZone.radius < -10){\n                deadZone.position.x = Math.floor(Math.random() * 90) + 10\n                deadZone.position.y = Math.floor(Math.random() * 90) + 10 \n                this.add_DeadZone();\n            }\n            else if(stepInfo.step - this.deadzoneTimer > 60 ){\n                this.deadzoneTimer = stepInfo.step;\n                let kombats = this.gameEngine.world.queryObjects({ instanceType : Kombat });\n                let damage = 2;\n                if(deadZone.radius < 50){\n                    damage += 2;\n                }\n                else if(deadZone.radius < 30){\n                    damage += 4;\n                }\n                else if(deadZone.radius < 10){\n                    damage += 6;\n                }\n                kombats.forEach(k => {\n                    let distance = Math.sqrt(\n                        Math.pow( k.position.x + k.width/2 - deadZone.x , 2) +  Math.pow( k.position.y + k.height/2 - deadZone.position.y,2)\n                    );\n                    if(distance >= deadZone.radius){\n                        k.health -= damage;\n                        let blood = new Blood(this.gameEngine, null, { position: k.position.clone() });\n                        if(k.health <= 0){\n                            this.destroyObjectById(k.id);\n                        }\n                        this.gameEngine.addObjectToWorld(blood);\n                        this.gameEngine.timer.add(600, this.destroyObjectById, this, [blood.id]);\n                    }\n                })\n            }\n        }\n    }\n}\n"],"file":"KombatServerEngine.js"}