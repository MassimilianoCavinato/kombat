{"version":3,"sources":["../../src/server/KombatServerEngine.js"],"names":["RANDOM_SPAWNS","TwoVector","KombatServerEngine","io","gameEngine","inputOptions","on","shoot","bind","granade","pickup","stepInfo","postStep","deadzoneTimer","add_Map","map","add_DeadZone","heal","Heal2","position","Math","floor","random","addObjectToWorld","forEach","w","wall","Wall","x","y","width","height","deadZone","DeadZone","radius","socket","length","clone","kombat","Kombat","playerId","name","max_health","health","ammo_capacity","ammo_loaded","granade_capacity","granade_loaded","throw_power","throwing_granade","timer_shot","timer_deadzone","socketId","world","queryObject","instanceType","removeObjectFromWorld","id","speed","liveTimer","bullet","Bullet","direction","ownerId","velocity","cos","sin","timer","add","destroyObjectById","reloadAmmo","Granade","explode","heals","queryObjects","i","h","d","sqrt","pow","objects","kombatId","granadeId","explosion","Explosion2","kombats","k","blood","Blood","step","damage","distance","ServerEngine"],"mappings":"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","sourcesContent":["import { ServerEngine, TwoVector } from 'lance-gg';\nimport Kombat from '../common/Kombat';\nimport Bullet from '../common/Bullet';\nimport Granade from '../common/Granade';\nimport Wall from '../common/Wall';\nimport Explosion2 from '../common/Explosion2';\nimport Blood from '../common/Blood';\nimport DeadZone from '../common/DeadZone';\nimport Heal2 from '../common/Heal2';\nimport { map } from './map1';\n\nconst RANDOM_SPAWNS = [\n    new TwoVector(10, 10),\n    new TwoVector(40, 10),\n    new TwoVector(10, 40),\n    new TwoVector(40, 40)\n];\n\nexport default class KombatServerEngine extends ServerEngine {\n\n    constructor(io, gameEngine, inputOptions) {\n        super(io, gameEngine, inputOptions);\n        this.gameEngine.on('shoot', this.shoot.bind(this));\n        this.gameEngine.on('granade', this.granade.bind(this));\n        this.gameEngine.on('pickup', this.pickup.bind(this));\n        this.gameEngine.on('postStep', (stepInfo) => this.postStep(stepInfo));\n        this.deadzoneTimer = 0;\n    }\n\n    start() {\n        super.start();\n        this.add_Map(map);\n        this.add_DeadZone();\n        let heal = new Heal2(this.gameEngine, null, { position: new TwoVector(\n            Math.floor(Math.random() * 90) + 10 ,\n            Math.floor(Math.random() * 90) + 10 \n        )});\n        this.gameEngine.addObjectToWorld(heal);\n    }\n\n    add_Map(map){\n        map.forEach(w => {\n            let wall = new Wall(this.gameEngine, null, { \n                position: new TwoVector(w.x, w.y), \n                width: w.width,\n                height: w.height,\n            });\n\n            this.gameEngine.addObjectToWorld(wall);\n        });\n    }\n\n    add_DeadZone(){\n        let deadZone = new DeadZone(this.gameEngine, null, { \n            position: new TwoVector(\n                Math.floor(Math.random() * 90) + 10 , \n                Math.floor(Math.random() * 90) + 10 \n            )\n        });\n        deadZone.radius = 150;\n        this.gameEngine.addObjectToWorld(deadZone);\n    }\n    onPlayerConnected(socket) {\n        super.onPlayerConnected(socket);\n        let position = RANDOM_SPAWNS[Math.floor(Math.random()*RANDOM_SPAWNS.length)].clone();\n        let kombat = new Kombat(this.gameEngine, null, { \n            position: position,\n        });\n\n\n        kombat.playerId = socket.playerId;\n        kombat.name = 'Kombat '+socket.playerId;\n        kombat.max_health = 100;\n        kombat.health = 100;\n        kombat.ammo_capacity = 21;\n        kombat.ammo_loaded =  21;\n        kombat.granade_capacity = 6;\n        kombat.granade_loaded =  50;\n        kombat.throw_power = 0;\n        kombat.throwing_granade = false;\n        kombat.timer_shot = 0;\n        kombat.timer_deadzone = 0;\n        this.gameEngine.addObjectToWorld(kombat);\n    }\n\n    onPlayerDisconnected(socketId, playerId) {\n        super.onPlayerDisconnected(socketId, playerId);\n        let kombat = this.gameEngine.world.queryObject({ playerId: playerId,  instanceType: Kombat });\n        if (kombat) this.gameEngine.removeObjectFromWorld(kombat.id);\n    }\n\n    shoot(kombat) {\n        if(kombat.ammo_loaded > 0){\n            kombat.ammo_loaded--;\n            let speed = 0.5;\n            let liveTimer = 100; //gameloops\n            let bullet = new Bullet(this.gameEngine, null, { \n                direction: kombat.direction,\n                playerId: kombat.playerId,\n                ownerId: kombat.id,\n                position: new TwoVector(\n                    kombat.position.x + (kombat.width / 4),\n                    kombat.position.y + (kombat.height / 4)\n                ),\n                velocity: new TwoVector(\n                    Math.cos(kombat.direction) * speed ,\n                    Math.sin(kombat.direction) * speed\n                )\n            });\n            this.gameEngine.addObjectToWorld(bullet);\n            this.gameEngine.timer.add(liveTimer, this.destroyObjectById, this, [bullet.id]);\n        }\n        else if(kombat.ammo_loaded === 0 ){\n            kombat.ammo_loaded--;\n            this.gameEngine.timer.add(240, this.reloadAmmo, this, [kombat.id]);\n        }\n    }\n\n    granade(kombat) {\n        if(kombat.granade_loaded > 0){\n            kombat.granade_loaded--;\n            let speed = .4 * kombat.throw_power;\n            let granade = new Granade(this.gameEngine, null, { \n                direction: kombat.direction,\n                position: new TwoVector(\n                    kombat.position.x + (kombat.width / 4),\n                    kombat.position.y + (kombat.height / 4)\n                ),\n                velocity: new TwoVector(\n                    Math.cos(kombat.direction) * speed ,\n                    Math.sin(kombat.direction) * speed\n                )\n            });\n            kombat.throw_power = 0;\n        \n            granade.playerId = kombat.playerId;\n            this.gameEngine.addObjectToWorld(granade);\n            this.gameEngine.timer.add(100, this.explode, this, [granade.id]);\n        }\n    }\n\n    pickup(kombat){\n     \n        let heals = this.gameEngine.world.queryObjects({instanceType: Heal2 });\n        for(let i=0; i<heals.length; i++){\n            let h = heals[i];\n             let d = Math.sqrt(\n                Math.pow( kombat.position.x+kombat.width/2 - h.position.x , 2) +  \n                Math.pow( kombat.position.y+kombat.height/2 - h.position.y,2)\n            );\n           \n            if(d < 1.5){\n                kombat.health += 30;\n                if(kombat.health > kombat.max_health){\n                    kombat.health = kombat.max_health;\n                }\n                this.gameEngine.removeObjectFromWorld(h.id);\n                return false;\n            }\n        }\n    }\n\n    destroyObjectById(id) {\n        if (this.gameEngine.world.objects[id]) {\n            this.gameEngine.removeObjectFromWorld(id);\n        }\n    }\n\n    reloadAmmo(kombatId){\n        let kombat = this.gameEngine.world.queryObject({ id: kombatId, instanceType: Kombat });\n        if(kombat){\n            kombat.ammo_loaded = kombat.ammo_capacity;\n        }\n    }\n\n    explode(granadeId) {\n        let granade = this.gameEngine.world.queryObject({ id: granadeId, instanceType: Granade });\n        if(granade){\n            let position = granade.position.clone();\n            let explosion = new Explosion2(this.gameEngine, null, { \n                position: position\n            });\n            this.destroyObjectById(granadeId);\n            explosion.radius = 10;\n            this.gameEngine.addObjectToWorld(explosion);\n            this.gameEngine.timer.add(150, this.destroyObjectById, this, [explosion.id]);\n            \n            let kombats = this.gameEngine.world.queryObjects({ instanceType: Kombat });\n            kombats.forEach(k=> {\n                let d = Math.sqrt(\n                    Math.pow( k.position.x+k.width/2 - position.x , 2) +  Math.pow( k.position.y+k.height/2 - position.y,2)\n                );\n                if(d <= explosion.radius){\n                    k.health -= 3;\n                    if(d <= explosion.radius/2){\n                       k.health -= 3; \n                    }\n                    if(d <= explosion.radius/4){\n                        k.health -= 3; \n                    }\n                    let blood = new Blood(this.gameEngine, null, { position: k.position.clone() });\n                    if(k.health <= 0){\n                        this.destroyObjectById(k.id);\n                    }\n                    this.gameEngine.addObjectToWorld(blood);\n                    this.gameEngine.timer.add(600, this.destroyObjectById, this, [blood.id]);\n                }\n            });\n        }\n    }\n\n    postStep(stepInfo){\n\n        let deadZone = this.gameEngine.world.queryObject({ instanceType : DeadZone });\n        if(deadZone){\n\n            if(deadZone.radius < -10){\n\n                deadZone.position.x = Math.floor(Math.random() * 90) + 10\n                deadZone.position.y = Math.floor(Math.random() * 90) + 10 \n                deadZone.radius = 150;\n                let heal = new Heal2(this.gameEngine, null, { position: deadZone.position.clone()})\n                this.gameEngine.addObjectToWorld(heal);\n            }\n            else{\n\n                if(stepInfo.step - this.deadzoneTimer > 60 ){\n                    this.deadzoneTimer = stepInfo.step;\n                    let kombats = this.gameEngine.world.queryObjects({ instanceType : Kombat });\n                    let damage = 2;\n                    if(deadZone.radius < 50){\n                        damage += 2;\n                    }\n                    else if(deadZone.radius < 30){\n                        damage += 4;\n                    }\n                    else if(deadZone.radius < 10){\n                        damage += 6;\n                    }\n                    kombats.forEach(k => {\n                        let distance = Math.sqrt(\n                            Math.pow( k.position.x + k.width/2 - deadZone.x , 2) +  Math.pow( k.position.y + k.height/2 - deadZone.position.y,2)\n                        );\n                        if(distance >= deadZone.radius){\n                            k.health -= damage;\n                            let blood = new Blood(this.gameEngine, null, { position: k.position.clone() });\n                            if(k.health <= 0){\n                                this.destroyObjectById(k.id);\n                            }\n                            this.gameEngine.addObjectToWorld(blood);\n                            this.gameEngine.timer.add(600, this.destroyObjectById, this, [blood.id]);\n                        }\n                    })\n                }\n                deadZone.radius -= .04;\n            }\n        }\n    }\n}\n"],"file":"KombatServerEngine.js"}